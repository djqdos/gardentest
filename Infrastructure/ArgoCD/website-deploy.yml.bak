#kind: Deploy
#name: web-deploy
#description: Web Frontend Deployment
#type: container
#dependencies: [build.web-build]
#spec:
#  image: ${actions.build.web-build.outputs.deploymentImageId}
#  ports:
#    - name: http
#      containerPort: 8080
#  ingresses:
#    - path: /
#      port: http
#  replicas: 2



kind: Deploy
type: kubernetes
name: webportal
disabled: true
dependencies: 
  - build.web-build
  - test.tests-testrunner
spec:
  manifests:
    - apiVersion: apps/v1
      kind: Deployment
      metadata:
        namespace: developmen
        name: webportal
        labels:
          app: webportal
      spec:
        replicas: 2
        selector:
          matchLabels:
            app: webportal
        strategy:
          type: RollingUpdate
          rollingUpdate:
            maxSurge: 1
            maxUnavailable: 1
        template:
          metadata:
            labels:
              app: webportal
          spec:
            containers:
              - name: webportal
                image: ${actions.build.web-build.outputs.deploymentImageId}
                command:
                  - dotnet
                  - GardenTest.Web.dll
                ports:
                  - name: http
                    containerPort: 8080
                    protocol: TCP
                env:
                  - name: ASPNETCORE_ENVIRONMENT
                    value: Development
                  - name: ASPNETCORE_URLS
                    value: http://+8080
                       
    - apiVersion: v1
      kind: Service
      metadata:
        labels:
          app: webportal
        name: webportal
      spec:
        type: ClusterIP
        ports:
          - name: webportal
            port: 8080
            targetPort: 8080
            protocol: TCP
        selector:
          app: webportal
    
    #- apiVersion: networking.k8s.io/v1
    #  kind: Ingress
    #  metadata:
    #    name: webportal
    #    labels:
    #      app: webportal
    #    annotations:
    #      nginx.ingress.kubernetes.io/ssl-redirect: "false"
    #      ingress.kubernetes.io/ssl-redirect: "false"
    #      nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    #  spec:
    #    ingressClassName: nginx
    #    rules:
    #      - host: "web.dev" 
    #        http:
    #          paths:
    #            - backend:
    #                service:
    #                  name: webportal
    #                  port:
    #                    number: 8080
    #              path: /
    #              pathType: Prefix
    #- apiVersion: networking.k8s.io/v1
    #  kind: Ingress
    #  metadata:
    #    name: example-ingress
    #    namespace: gardentest-rb-namespace
    #    annotations:
    #      nginx.ingress.kubernetes.io/ssl-redirect: "false"
    #      ingress.kubernetes.io/ssl-redirect: "false"
    #      nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    #      nginx.ingress.kubernetes.io/force-ssl-redirect: "false"
    #  spec:
    #    ingressClassName: nginx
    #    rules:
    #      - host: "test.dev"
    #        http:
    #          paths:
    #            - pathType: Prefix
    #              path: "/web"
    #              backend:
    #                service:
    #                  name: webdeploy
    #                  port:
    #                    number: 8080
    #            - pathType: Prefix
    #              path: "/consumer"
    #              backend:
    #                service:
    #                  name: consumerportal
    #                  port:
    #                    number: 8080


